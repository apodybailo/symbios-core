import requests
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

OLLAMA_URL = "http://localhost:11434"
MODEL_NAME = "mistral:latest"

def generate_with_mistral(prompt: str) -> str:
    url = f"{OLLAMA_URL}/api/generate"
    headers = {"Content-Type": "application/json"}
    payload = {
        "model": MODEL_NAME,
        "prompt": prompt,
        "stream": False
    }

    logger.info(f"[Mistral] –ù–∞–¥—Å–∏–ª–∞—é –∑–∞–ø–∏—Ç –¥–æ Ollama –∑ prompt: {prompt}")

    try:
        response = requests.post(url, json=payload, headers=headers, timeout=60)

        if response.status_code == 200:
            result = response.json()
            output = result.get("response", "").strip()
            logger.info(f"[Mistral] –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {output}")
            return output if output else "‚ö†Ô∏è –í—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ—Ä–æ–∂–Ω—è."
        else:
            logger.error(f"[Mistral] –ü–æ–º–∏–ª–∫–∞ HTTP {response.status_code}: {response.text}")
            return f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥ Mistral: HTTP {response.status_code}"

    except requests.exceptions.ConnectionError:
        logger.exception("[Mistral] –ù–µ–º–æ–∂–ª–∏–≤–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –¥–æ Ollama. –ß–∏ –∑–∞–ø—É—â–µ–Ω–∏–π ollama serve?")
        return "‚ùå Mistral –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ –∑–∞–ø—É—â–µ–Ω–æ ollama serve."

    except Exception as e:
        logger.exception(f"[Mistral] –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        return f"‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {e}"

# üîç –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø—É—Å–∫ —ñ–∑ CLI
if __name__ == "__main__":
    res = generate_with_mistral("–©–æ —Ç–∞–∫–µ –®–ª—è—Ö –í–æ—ó–Ω–∞?")
    print("üëâ", res)
